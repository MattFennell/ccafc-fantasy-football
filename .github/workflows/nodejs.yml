name: Build and Deploy
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [8.x, 10.x]
    steps:
    - uses: actions/checkout@v1

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    # - name: install
    #   run:
    #     npm ci
    # - name: Deploy stuff
    #   run: |
    #     ls
    #     npx firebase use ccafc-fantasy-football
    #     npx firebase projects:list
    #   env:
    #     FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [8.x]
    steps:
    - uses: actions/checkout@master
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: install
      run:
        npm ci
    - name: Deploy stuff
      run: |
        ls
        npx firebase projects:list
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
    
    # - name: Build
    #   run: 
    #     npm run build
    #   env:
    #     CI: true

    # - name: Testing
    #   run:
    #     npm test
    #   env:
    #     CI: true

    # - name: Archive Production Artifact
    #   uses: actions/upload-artifact@master
    #   with:
    #     name: build
    #     path: build

    
  # deploy: 
  #   name: Deploy
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@master
      # - name: Download Artifact
      #   uses: actions/download-artifact@master
      #   with:
      #     name: build
      # - name: Deploy Firebase Hosting
      #   uses: w9jds/firebase-action@master
      #   with:
      #     args: deploy --only hosting
      #   env:
      #     FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      # - name: Deploy Firebase Functions
      #   uses: w9jds/firebase-action@master
      #   with:
      #     args: deploy --only functions
      #   env:
      #     FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}